//
// FX Version: fx_5_0
//
// 4 local buffer(s)
//
cbuffer cbPerObject : register(b0)
{
    float4x4 worldViewProj;             // Offset:    0, size:   64
    float4x4 worldInverseTranspose;     // Offset:   64, size:   64
    float4x4 worldMx;                   // Offset:  128, size:   64
    float4  clip_level;                 // Offset:  192, size:   16
    float3  cam_pos;                    // Offset:  208, size:   12
}

cbuffer pointLight : register(b1)
{
    float3  plight_pos;                 // Offset:    0, size:   12
    float   plight_range;               // Offset:   12, size:    4
    float3  plight_att;                 // Offset:   16, size:   12
    float4  plight_ambient;             // Offset:   32, size:   16
    float4  plight_diffuse;             // Offset:   48, size:   16
    float4  plight_specular;            // Offset:   64, size:   16
    float4  plight_spec_color;          // Offset:   80, size:   16
    float   spec_power;                 // Offset:   96, size:    4
    float3  plight_direction;           // Offset:  100, size:   12
}

cbuffer spotlight : register(b2)
{
    float3  slight_pos;                 // Offset:    0, size:   12
    float   slight_range;               // Offset:   12, size:    4
    float3  slight_dir;                 // Offset:   16, size:   12
    float   slight_cone;                // Offset:   28, size:    4
    float3  slight_att;                 // Offset:   32, size:   12
    float4  slight_ambient;             // Offset:   48, size:   16
    float4  slight_diffuse;             // Offset:   64, size:   16
}

cbuffer Material : register(b3)
{
    float   M_ambient;                  // Offset:    0, size:    4
    float   M_diffuse;                  // Offset:    4, size:    4
    float   M_spec;                     // Offset:    8, size:    4
    float   show_tex;                   // Offset:   12, size:    4
}

//
// 5 local object(s)
//
RasterizerState mainState
{
    FillMode = uint(SOLID /* 3 */);
    CullMode = uint(NONE /* 1 */);
};
RasterizerState wireframe
{
    FillMode = uint(WIREFRAME /* 2 */);
    CullMode = uint(NONE /* 1 */);
};
Texture2D MyTex;
SamplerState ss
{
};
Texture2D NormMap;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 8 technique(s)
    //
    technique11 RenderScene
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4 [unused]
                //   float M_diffuse;                   // Offset:    4 Size:     4 [unused]
                //   float M_spec;                      // Offset:    8 Size:     4 [unused]
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float       
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 136 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0
                  mul o0.xyzw, r0.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:Inf,1:Inf,2:Inf,3:Inf>
                  ret 
                else 
                
                #line 142
                  mul o0.xyzw, v4.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:[-1.02085e+038f,1.02085e+038f],1:[-1.02085e+038f,1.02085e+038f],2:[-1.02085e+038f,1.02085e+038f],3:[-1.02085e+038f,1.02085e+038f]>
                  ret 
                
                #line 136
                endif 
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12 [unused]
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12
                //
                // }
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4
                //   float M_diffuse;                   // Offset:    4 Size:     4
                //   float M_spec;                      // Offset:    8 Size:     4
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // pointLight                        cbuffer      NA          NA    1        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[7], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_input_ps linear v7.xyz
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 203 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0  // diffuse<0:Inf,1:Inf,2:Inf,3:Inf>
                else 
                
                #line 209
                  mov r0.xyzw, v4.xyzw  // diffuse<0,1,2,3>
                
                #line 203
                endif 
                
                #line 211
                dp3 r1.x, v3.xyzx, v3.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v3.xyzx  // pin<11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>
                
                #line 217
                dp3 r1.w, cb1[6].yzwy, cb1[6].yzwy
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, cb1[6].yzwy  // light_dir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r2.xyzx
                add r3.xyz, r2.xyzx, v7.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r4.xyzw, cb1[2].xyzw, cb3[0].xxxx  // final_a<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r1.w, r1.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(1.000000)
                mul r2.xyzw, r1.wwww, cb3[0].yyyy  // final_d<0,1,2,3>
                dp3 r1.x, r1.xyzx, r3.xyzx
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)
                mul r1.x, r1.x, l(1.000000)
                mul r1.xyzw, r1.xxxx, cb3[0].zzzz  // final_s<0,1,2,3>
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, cb1[2].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r0.xyzw, r1.xyzw
                max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min o0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // PSDirLight<0:[0f,1f],1:[0f,1f],2:[0f,1f],3:[0f,1f]>
                ret 
                // Approximately 34 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

    }

    technique11 RenderSceneFLAT
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float       
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 0   xy          5     NONE  float   xy  
                // TEXCOORD                 1   xyz         6     NONE  float   xyz 
                // SV_ClipDistance          0   x           7  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xy
                dcl_output o6.xyz
                dcl_output_siv o7.x, clip_distance
                dcl_temps 8
                
                #line 115 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 121
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<23:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<18,19>
                mov r6.xyz, -v0.xyzx
                add r6.xyz, r6.xyzx, cb0[13].xyzx
                dp3 r4.w, r6.xyzx, r6.xyzx
                rsq r4.w, r4.w
                mul r6.xyz, r4.wwww, r6.xyzx  // vout<20:NaN:Inf,21:NaN:Inf,22:NaN:Inf>
                dp4 r7.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r7.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r7.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r7.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r7.xyzw  // RenderSceneVSFlat<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVSFlat<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVSFlat<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVSFlat<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVSFlat<11,12,13>
                mov o6.xyz, r6.xyzx  // RenderSceneVSFlat<20:NaN:Inf,21:NaN:Inf,22:NaN:Inf>
                mov o5.xy, r5.xyxx  // RenderSceneVSFlat<18,19>
                mov o7.x, r2.w  // RenderSceneVSFlat<23:NaN:Inf>
                ret 
                // Approximately 33 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4 [unused]
                //   float M_diffuse;                   // Offset:    4 Size:     4 [unused]
                //   float M_spec;                      // Offset:    8 Size:     4 [unused]
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 0   xy          5     NONE  float   xy  
                // TEXCOORD                 1   xyz         6     NONE  float       
                // SV_ClipDistance          0   x           7  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xyzw
                dcl_input_ps constant v5.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 151 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v5.xyxx, t0.xyzw, s0
                  mul o0.xyzw, r0.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePSFLAT<0:Inf,1:Inf,2:Inf,3:Inf>
                  ret 
                else 
                
                #line 157
                  mul o0.xyzw, v4.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePSFLAT<0:[-1.02085e+038f,1.02085e+038f],1:[-1.02085e+038f,1.02085e+038f],2:[-1.02085e+038f,1.02085e+038f],3:[-1.02085e+038f,1.02085e+038f]>
                  ret 
                
                #line 151
                endif 
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float       
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 0   xy          5     NONE  float   xy  
                // TEXCOORD                 1   xyz         6     NONE  float   xyz 
                // SV_ClipDistance          0   x           7  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xy
                dcl_output o6.xyz
                dcl_output_siv o7.x, clip_distance
                dcl_temps 8
                
                #line 115 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 121
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<23:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<18,19>
                mov r6.xyz, -v0.xyzx
                add r6.xyz, r6.xyzx, cb0[13].xyzx
                dp3 r4.w, r6.xyzx, r6.xyzx
                rsq r4.w, r4.w
                mul r6.xyz, r4.wwww, r6.xyzx  // vout<20:NaN:Inf,21:NaN:Inf,22:NaN:Inf>
                dp4 r7.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r7.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r7.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r7.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r7.xyzw  // RenderSceneVSFlat<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVSFlat<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVSFlat<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVSFlat<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVSFlat<11,12,13>
                mov o6.xyz, r6.xyzx  // RenderSceneVSFlat<20:NaN:Inf,21:NaN:Inf,22:NaN:Inf>
                mov o5.xy, r5.xyxx  // RenderSceneVSFlat<18,19>
                mov o7.x, r2.w  // RenderSceneVSFlat<23:NaN:Inf>
                ret 
                // Approximately 33 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12 [unused]
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12
                //
                // }
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4
                //   float M_diffuse;                   // Offset:    4 Size:     4
                //   float M_spec;                      // Offset:    8 Size:     4
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // pointLight                        cbuffer      NA          NA    1        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 0   xy          5     NONE  float   xy  
                // TEXCOORD                 1   xyz         6     NONE  float   xyz 
                // SV_ClipDistance          0   x           7  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[7], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps constant v3.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps constant v5.xy
                dcl_input_ps linear v6.xyz
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 235 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v5.xyxx, t0.xyzw, s0  // diffuse<0:Inf,1:Inf,2:Inf,3:Inf>
                else 
                
                #line 241
                  mov r0.xyzw, v4.xyzw  // diffuse<0,1,2,3>
                
                #line 235
                endif 
                
                #line 243
                dp3 r1.x, v3.xyzx, v3.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v3.xyzx  // pin<11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>
                
                #line 251
                dp3 r1.w, cb1[6].yzwy, cb1[6].yzwy
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, cb1[6].yzwy  // light_dir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r2.xyzx
                add r3.xyz, r2.xyzx, v6.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 256
                mul r4.xyzw, cb1[2].xyzw, cb3[0].xxxx  // final_a<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r1.w, r1.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(1.000000)
                mul r2.xyzw, r1.wwww, cb3[0].yyyy  // final_d<0,1,2,3>
                dp3 r1.x, r1.xyzx, r3.xyzx
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)
                mul r1.x, r1.x, l(1.000000)
                mul r1.xyzw, r1.xxxx, cb3[0].zzzz  // final_s<0,1,2,3>
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, cb1[2].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r0.xyzw, r1.xyzw
                max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min o0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // PSDirLightFLAT<0:[0f,1f],1:[0f,1f],2:[0f,1f],3:[0f,1f]>
                ret 
                // Approximately 34 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

    }

    technique11 RenderSceneWireFrame
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4 [unused]
                //   float M_diffuse;                   // Offset:    4 Size:     4 [unused]
                //   float M_spec;                      // Offset:    8 Size:     4 [unused]
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float       
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 136 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0
                  mul o0.xyzw, r0.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:Inf,1:Inf,2:Inf,3:Inf>
                  ret 
                else 
                
                #line 142
                  mul o0.xyzw, v4.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:[-1.02085e+038f,1.02085e+038f],1:[-1.02085e+038f,1.02085e+038f],2:[-1.02085e+038f,1.02085e+038f],3:[-1.02085e+038f,1.02085e+038f]>
                  ret 
                
                #line 136
                endif 
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = wireframe;
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12 [unused]
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12
                //
                // }
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4
                //   float M_diffuse;                   // Offset:    4 Size:     4
                //   float M_spec;                      // Offset:    8 Size:     4
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // pointLight                        cbuffer      NA          NA    1        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[7], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_input_ps linear v7.xyz
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 203 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0  // diffuse<0:Inf,1:Inf,2:Inf,3:Inf>
                else 
                
                #line 209
                  mov r0.xyzw, v4.xyzw  // diffuse<0,1,2,3>
                
                #line 203
                endif 
                
                #line 211
                dp3 r1.x, v3.xyzx, v3.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v3.xyzx  // pin<11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>
                
                #line 217
                dp3 r1.w, cb1[6].yzwy, cb1[6].yzwy
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, cb1[6].yzwy  // light_dir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r2.xyzx
                add r3.xyz, r2.xyzx, v7.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r4.xyzw, cb1[2].xyzw, cb3[0].xxxx  // final_a<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r1.w, r1.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(1.000000)
                mul r2.xyzw, r1.wwww, cb3[0].yyyy  // final_d<0,1,2,3>
                dp3 r1.x, r1.xyzx, r3.xyzx
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)
                mul r1.x, r1.x, l(1.000000)
                mul r1.xyzw, r1.xxxx, cb3[0].zzzz  // final_s<0,1,2,3>
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, cb1[2].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r0.xyzw, r1.xyzw
                max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min o0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // PSDirLight<0:[0f,1f],1:[0f,1f],2:[0f,1f],3:[0f,1f]>
                ret 
                // Approximately 34 instruction slots used
                            
            };
            RasterizerState = wireframe;
        }

    }

    technique11 RenderSceneMultiWireFrame
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4 [unused]
                //   float M_diffuse;                   // Offset:    4 Size:     4 [unused]
                //   float M_spec;                      // Offset:    8 Size:     4 [unused]
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float       
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 136 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0
                  mul o0.xyzw, r0.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:Inf,1:Inf,2:Inf,3:Inf>
                  ret 
                else 
                
                #line 142
                  mul o0.xyzw, v4.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:[-1.02085e+038f,1.02085e+038f],1:[-1.02085e+038f,1.02085e+038f],2:[-1.02085e+038f,1.02085e+038f],3:[-1.02085e+038f,1.02085e+038f]>
                  ret 
                
                #line 136
                endif 
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = wireframe;
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12 [unused]
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12
                //
                // }
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4
                //   float M_diffuse;                   // Offset:    4 Size:     4
                //   float M_spec;                      // Offset:    8 Size:     4
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // pointLight                        cbuffer      NA          NA    1        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[7], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_input_ps linear v7.xyz
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 203 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0  // diffuse<0:Inf,1:Inf,2:Inf,3:Inf>
                else 
                
                #line 209
                  mov r0.xyzw, v4.xyzw  // diffuse<0,1,2,3>
                
                #line 203
                endif 
                
                #line 211
                dp3 r1.x, v3.xyzx, v3.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v3.xyzx  // pin<11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>
                
                #line 217
                dp3 r1.w, cb1[6].yzwy, cb1[6].yzwy
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, cb1[6].yzwy  // light_dir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r2.xyzx
                add r3.xyz, r2.xyzx, v7.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 222
                mul r4.xyzw, cb1[2].xyzw, cb3[0].xxxx  // final_a<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r1.w, r1.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(1.000000)
                mul r2.xyzw, r1.wwww, cb3[0].yyyy  // final_d<0,1,2,3>
                dp3 r1.x, r1.xyzx, r3.xyzx
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)
                mul r1.x, r1.x, l(1.000000)
                mul r1.xyzw, r1.xxxx, cb3[0].zzzz  // final_s<0,1,2,3>
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, cb1[2].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r0.xyzw, r1.xyzw
                max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min o0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // PSDirLight<0:[0f,1f],1:[0f,1f],2:[0f,1f],3:[0f,1f]>
                ret 
                // Approximately 34 instruction slots used
                            
            };
            RasterizerState = wireframe;
        }

    }

    technique11 RenderSceneMulti
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4 [unused]
                //   float M_diffuse;                   // Offset:    4 Size:     4 [unused]
                //   float M_spec;                      // Offset:    8 Size:     4 [unused]
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float       
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 136 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0
                  mul o0.xyzw, r0.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:Inf,1:Inf,2:Inf,3:Inf>
                  ret 
                else 
                
                #line 142
                  mul o0.xyzw, v4.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:[-1.02085e+038f,1.02085e+038f],1:[-1.02085e+038f,1.02085e+038f],2:[-1.02085e+038f,1.02085e+038f],3:[-1.02085e+038f,1.02085e+038f]>
                  ret 
                
                #line 136
                endif 
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12 [unused]
                //
                // }
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4
                //   float M_diffuse;                   // Offset:    4 Size:     4
                //   float M_spec;                      // Offset:    8 Size:     4
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // pointLight                        cbuffer      NA          NA    1        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_input_ps linear v7.xyz
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 403 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0  // diffuse<0:Inf,1:Inf,2:Inf,3:Inf>
                else 
                
                #line 409
                  mov r0.xyzw, v4.xyzw  // diffuse<0,1,2,3>
                
                #line 403
                endif 
                
                #line 411
                dp3 r1.x, v3.xyzx, v3.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v3.xyzx  // pin<11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>
                
                #line 419
                mov r2.xyz, -cb1[0].xyzx
                add r2.xyz, r2.xyzx, v1.xyzx
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // light_dir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r2.xyzx
                add r3.xyz, r2.xyzx, v7.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 424
                mul r4.xyzw, cb1[2].xyzw, cb3[0].xxxx  // final_a<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r1.w, r1.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(1.000000)
                mul r2.xyzw, r1.wwww, cb3[0].yyyy  // final_d<0,1,2,3>
                dp3 r1.x, r1.xyzx, r3.xyzx
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)
                mul r1.x, r1.x, l(1.000000)
                mul r1.xyzw, r1.xxxx, cb3[0].zzzz  // final_s<0,1,2,3>
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, cb1[2].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r0.xyzw, r1.xyzw
                max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min o0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // PSMultiL<0:[0f,1f],1:[0f,1f],2:[0f,1f],3:[0f,1f]>
                ret 
                // Approximately 36 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

    }

    technique11 RenderSceneMultiFLAT
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float       
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 0   xy          5     NONE  float   xy  
                // TEXCOORD                 1   xyz         6     NONE  float   xyz 
                // SV_ClipDistance          0   x           7  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xy
                dcl_output o6.xyz
                dcl_output_siv o7.x, clip_distance
                dcl_temps 8
                
                #line 115 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 121
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<23:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<18,19>
                mov r6.xyz, -v0.xyzx
                add r6.xyz, r6.xyzx, cb0[13].xyzx
                dp3 r4.w, r6.xyzx, r6.xyzx
                rsq r4.w, r4.w
                mul r6.xyz, r4.wwww, r6.xyzx  // vout<20:NaN:Inf,21:NaN:Inf,22:NaN:Inf>
                dp4 r7.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r7.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r7.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r7.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r7.xyzw  // RenderSceneVSFlat<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVSFlat<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVSFlat<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVSFlat<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVSFlat<11,12,13>
                mov o6.xyz, r6.xyzx  // RenderSceneVSFlat<20:NaN:Inf,21:NaN:Inf,22:NaN:Inf>
                mov o5.xy, r5.xyxx  // RenderSceneVSFlat<18,19>
                mov o7.x, r2.w  // RenderSceneVSFlat<23:NaN:Inf>
                ret 
                // Approximately 33 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4 [unused]
                //   float M_diffuse;                   // Offset:    4 Size:     4 [unused]
                //   float M_spec;                      // Offset:    8 Size:     4 [unused]
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 0   xy          5     NONE  float   xy  
                // TEXCOORD                 1   xyz         6     NONE  float       
                // SV_ClipDistance          0   x           7  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xyzw
                dcl_input_ps constant v5.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 151 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v5.xyxx, t0.xyzw, s0
                  mul o0.xyzw, r0.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePSFLAT<0:Inf,1:Inf,2:Inf,3:Inf>
                  ret 
                else 
                
                #line 157
                  mul o0.xyzw, v4.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePSFLAT<0:[-1.02085e+038f,1.02085e+038f],1:[-1.02085e+038f,1.02085e+038f],2:[-1.02085e+038f,1.02085e+038f],3:[-1.02085e+038f,1.02085e+038f]>
                  ret 
                
                #line 151
                endif 
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float       
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 0   xy          5     NONE  float   xy  
                // TEXCOORD                 1   xyz         6     NONE  float   xyz 
                // SV_ClipDistance          0   x           7  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xy
                dcl_output o6.xyz
                dcl_output_siv o7.x, clip_distance
                dcl_temps 8
                
                #line 115 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 121
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<23:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<18,19>
                mov r6.xyz, -v0.xyzx
                add r6.xyz, r6.xyzx, cb0[13].xyzx
                dp3 r4.w, r6.xyzx, r6.xyzx
                rsq r4.w, r4.w
                mul r6.xyz, r4.wwww, r6.xyzx  // vout<20:NaN:Inf,21:NaN:Inf,22:NaN:Inf>
                dp4 r7.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r7.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r7.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r7.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r7.xyzw  // RenderSceneVSFlat<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVSFlat<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVSFlat<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVSFlat<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVSFlat<11,12,13>
                mov o6.xyz, r6.xyzx  // RenderSceneVSFlat<20:NaN:Inf,21:NaN:Inf,22:NaN:Inf>
                mov o5.xy, r5.xyxx  // RenderSceneVSFlat<18,19>
                mov o7.x, r2.w  // RenderSceneVSFlat<23:NaN:Inf>
                ret 
                // Approximately 33 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12 [unused]
                //
                // }
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4
                //   float M_diffuse;                   // Offset:    4 Size:     4
                //   float M_spec;                      // Offset:    8 Size:     4
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // pointLight                        cbuffer      NA          NA    1        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TEXCOORD                 0   xy          5     NONE  float   xy  
                // TEXCOORD                 1   xyz         6     NONE  float   xyz 
                // SV_ClipDistance          0   x           7  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps constant v3.xyz
                dcl_input_ps linear v4.xyzw
                dcl_input_ps constant v5.xy
                dcl_input_ps linear v6.xyz
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 366 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v5.xyxx, t0.xyzw, s0  // diffuse<0:Inf,1:Inf,2:Inf,3:Inf>
                else 
                
                #line 372
                  mov r0.xyzw, v4.xyzw  // diffuse<0,1,2,3>
                
                #line 366
                endif 
                
                #line 374
                dp3 r1.x, v3.xyzx, v3.xyzx
                rsq r1.x, r1.x
                mul r1.xyz, r1.xxxx, v3.xyzx  // pin<11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>
                
                #line 382
                mov r2.xyz, -cb1[0].xyzx
                add r2.xyz, r2.xyzx, v1.xyzx
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // light_dir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r2.xyzx
                add r3.xyz, r2.xyzx, v6.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 387
                mul r4.xyzw, cb1[2].xyzw, cb3[0].xxxx  // final_a<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r1.w, r1.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(1.000000)
                mul r2.xyzw, r1.wwww, cb3[0].yyyy  // final_d<0,1,2,3>
                dp3 r1.x, r1.xyzx, r3.xyzx
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)
                mul r1.x, r1.x, l(1.000000)
                mul r1.xyzw, r1.xxxx, cb3[0].zzzz  // final_s<0,1,2,3>
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, cb1[2].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r0.xyzw, r1.xyzw
                max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min o0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // PSMultiLFLAT<0:[0f,1f],1:[0f,1f],2:[0f,1f],3:[0f,1f]>
                ret 
                // Approximately 36 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

    }

    technique11 RenderSceneBump
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4 [unused]
                //   float M_diffuse;                   // Offset:    4 Size:     4 [unused]
                //   float M_spec;                      // Offset:    8 Size:     4 [unused]
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float       
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 136 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0
                  mul o0.xyzw, r0.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:Inf,1:Inf,2:Inf,3:Inf>
                  ret 
                else 
                
                #line 142
                  mul o0.xyzw, v4.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:[-1.02085e+038f,1.02085e+038f],1:[-1.02085e+038f,1.02085e+038f],2:[-1.02085e+038f,1.02085e+038f],3:[-1.02085e+038f,1.02085e+038f]>
                  ret 
                
                #line 136
                endif 
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12 [unused]
                //
                // }
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4
                //   float M_diffuse;                   // Offset:    4 Size:     4
                //   float M_spec;                      // Offset:    8 Size:     4
                //   float show_tex;                    // Offset:   12 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // NormMap                           texture  float4          2d    1        1
                // pointLight                        cbuffer      NA          NA    1        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float       
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v5.xyz
                dcl_input_ps linear v6.xy
                dcl_input_ps linear v7.xyz
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 321 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                sample r0.xyzw, v6.xyxx, t0.xyzw, s0  // diffuse<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 324
                sample r1.xyzw, v6.xyxx, t1.xyzw, s0
                mov r1.xyz, r1.xyzx  // normalMap<0:Inf,1:Inf,2:Inf>
                mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalMap<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, v5.xyzx, v3.xyzx
                mul r2.xyz, r1.wwww, v3.xyzx
                mov r2.xyz, -r2.xyzx
                add r2.xyz, r2.xyzx, v5.xyzx
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // pin<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov r3.xyz, r2.yzxy  // pin<19:NaN:Inf,20:NaN:Inf,18:NaN:Inf>
                mul r4.xyz, r3.yzxy, v3.yzxy
                mul r3.xyz, r3.xyzx, v3.zxyz
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r4.xyzx  // biTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 334
                mul r2.xyz, r1.xxxx, r2.xyzx
                mul r1.xyw, r1.yyyy, r3.xyxz
                add r1.xyw, r1.xyxw, r2.xyxz
                mul r2.xyz, r1.zzzz, v3.xyzx
                add r1.xyz, r1.xywx, r2.xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx  // pin<11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>
                
                #line 343
                mov r2.xyz, -cb1[0].xyzx
                add r2.xyz, r2.xyzx, v1.xyzx
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // light_dir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r2.xyzx
                add r3.xyz, r2.xyzx, v7.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 348
                mul r4.xyzw, cb1[2].xyzw, cb3[0].xxxx  // final_a<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r1.w, r1.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(1.000000)
                mul r2.xyzw, r1.wwww, cb3[0].yyyy  // final_d<0,1,2,3>
                dp3 r1.x, r1.xyzx, r3.xyzx
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)
                mul r1.x, r1.x, l(1.000000)
                mul r1.xyzw, r1.xxxx, cb3[0].zzzz  // final_s<0,1,2,3>
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, cb1[2].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r0.xyzw, r1.xyzw
                max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min o0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // PSDirLightBump<0:[0f,1f],1:[0f,1f],2:[0f,1f],3:[0f,1f]>
                ret 
                // Approximately 52 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

    }

    technique11 RenderSceneMultiBump
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4 [unused]
                //   float M_diffuse;                   // Offset:    4 Size:     4 [unused]
                //   float M_spec;                      // Offset:    8 Size:     4 [unused]
                //   float show_tex;                    // Offset:   12 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float       
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float       
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float       
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xyzw
                dcl_input_ps linear v6.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 136 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                lt r0.x, l(0.000000), cb3[0].w
                if_nz r0.x
                  sample r0.xyzw, v6.xyxx, t0.xyzw, s0
                  mul o0.xyzw, r0.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:Inf,1:Inf,2:Inf,3:Inf>
                  ret 
                else 
                
                #line 142
                  mul o0.xyzw, v4.xyzw, l(0.300000, 0.300000, 0.300000, 0.300000)  // RenderScenePS<0:[-1.02085e+038f,1.02085e+038f],1:[-1.02085e+038f,1.02085e+038f],2:[-1.02085e+038f,1.02085e+038f],3:[-1.02085e+038f,1.02085e+038f]>
                  ret 
                
                #line 136
                endif 
                ret 
                // Approximately 10 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldInverseTranspose;    // Offset:   64 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:  128 Size:    64
                //   float4 clip_level;                 // Offset:  192 Size:    16
                //   float3 cam_pos;                    // Offset:  208 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TANGENT                  0   xyz         4     NONE  float   xyz 
                // BINORMAL                 0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float   xyzw
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float   xyzw
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float   x   
                //
                vs_4_0
                dcl_constantbuffer cb0[14], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_input v3.xy
                dcl_input v4.xyz
                dcl_output o0.xyzw
                dcl_output o1.xyz
                dcl_output_siv o2.xyzw, position
                dcl_output o3.xyz
                dcl_output o4.xyzw
                dcl_output o5.xyz
                dcl_output o6.xy
                dcl_output o7.xyz
                dcl_output_siv o8.x, clip_distance
                dcl_temps 9
                
                #line 98 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<7:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<8:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<9:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<10:NaN:Inf>
                mov r2.xyz, v0.xyzx  // vout<4,5,6>
                mov r3.xyzw, v2.xyzw  // vout<14,15,16,17>
                
                #line 104
                mov r4.xyz, v1.xyzx  // vout<11,12,13>
                dp4 r5.x, r1.xyzw, cb0[8].xyzw
                dp4 r5.y, r1.xyzw, cb0[9].xyzw
                dp4 r5.z, r1.xyzw, cb0[10].xyzw
                dp4 r5.w, r1.xyzw, cb0[11].xyzw
                dp4 r2.w, r5.xyzw, cb0[12].xyzw  // vout<26:NaN:Inf>
                mov r5.xy, v3.xyxx  // vout<21,22>
                dp3 r6.x, v4.xyzx, cb0[8].xyzx  // vout<18:NaN:Inf>
                dp3 r6.y, v4.xyzx, cb0[9].xyzx  // vout<19:NaN:Inf>
                dp3 r6.z, v4.xyzx, cb0[10].xyzx  // vout<20:NaN:Inf>
                mov r7.xyz, -v0.xyzx
                add r7.xyz, r7.xyzx, cb0[13].xyzx
                dp3 r4.w, r7.xyzx, r7.xyzx
                rsq r4.w, r4.w
                mul r7.xyz, r4.wwww, r7.xyzx  // vout<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                dp4 r8.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r8.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r8.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r8.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r8.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r1.xyzw  // RenderSceneVS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf,10:NaN:Inf>
                mov o4.xyzw, r3.xyzw  // RenderSceneVS<14,15,16,17>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4,5,6>
                mov o3.xyz, r4.xyzx  // RenderSceneVS<11,12,13>
                mov o5.xyz, r6.xyzx  // RenderSceneVS<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov o7.xyz, r7.xyzx  // RenderSceneVS<23:NaN:Inf,24:NaN:Inf,25:NaN:Inf>
                mov o6.xy, r5.xyxx  // RenderSceneVS<21,22>
                mov o8.x, r2.w  // RenderSceneVS<26:NaN:Inf>
                ret 
                // Approximately 37 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12 [unused]
                //
                // }
                //
                // cbuffer Material
                // {
                //
                //   float M_ambient;                   // Offset:    0 Size:     4
                //   float M_diffuse;                   // Offset:    4 Size:     4
                //   float M_spec;                      // Offset:    8 Size:     4
                //   float show_tex;                    // Offset:   12 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // ss                                sampler      NA          NA    0        1
                // MyTex                             texture  float4          2d    0        1
                // NormMap                           texture  float4          2d    1        1
                // pointLight                        cbuffer      NA          NA    1        1
                // Material                          cbuffer      NA          NA    3        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 1   xyzw        0     NONE  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // SV_POSITION              0   xyzw        2      POS  float       
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // COLOR                    0   xyzw        4     NONE  float       
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                // TEXCOORD                 0   xy          6     NONE  float   xy  
                // TEXCOORD                 1   xyz         7     NONE  float   xyz 
                // SV_ClipDistance          0   x           8  CLIPDST  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_constantbuffer cb3[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xyz
                dcl_input_ps linear v5.xyz
                dcl_input_ps linear v6.xy
                dcl_input_ps linear v7.xyz
                dcl_output o0.xyzw
                dcl_temps 5
                
                #line 276 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Tree_Effect.fx"
                sample r0.xyzw, v6.xyxx, t0.xyzw, s0  // diffuse<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 279
                sample r1.xyzw, v6.xyxx, t1.xyzw, s0
                mov r1.xyz, r1.xyzx  // normalMap<0:Inf,1:Inf,2:Inf>
                mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
                add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // normalMap<0:Inf,1:Inf,2:Inf>
                dp3 r1.w, v5.xyzx, v3.xyzx
                mul r2.xyz, r1.wwww, v3.xyzx
                mov r2.xyz, -r2.xyzx
                add r2.xyz, r2.xyzx, v5.xyzx
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // pin<18:NaN:Inf,19:NaN:Inf,20:NaN:Inf>
                mov r3.xyz, r2.yzxy  // pin<19:NaN:Inf,20:NaN:Inf,18:NaN:Inf>
                mul r4.xyz, r3.yzxy, v3.yzxy
                mul r3.xyz, r3.xyzx, v3.zxyz
                mov r3.xyz, -r3.xyzx
                add r3.xyz, r3.xyzx, r4.xyzx  // biTangent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 289
                mul r2.xyz, r1.xxxx, r2.xyzx
                mul r1.xyw, r1.yyyy, r3.xyxz
                add r1.xyw, r1.xyxw, r2.xyxz
                mul r2.xyz, r1.zzzz, v3.xyzx
                add r1.xyz, r1.xywx, r2.xyzx
                dp3 r1.w, r1.xyzx, r1.xyzx
                rsq r1.w, r1.w
                mul r1.xyz, r1.wwww, r1.xyzx  // pin<11:NaN:Inf,12:NaN:Inf,13:NaN:Inf>
                
                #line 301
                mov r2.xyz, -cb1[0].xyzx
                add r2.xyz, r2.xyzx, v1.xyzx
                dp3 r1.w, r2.xyzx, r2.xyzx
                rsq r1.w, r1.w
                mul r2.xyz, r1.wwww, r2.xyzx  // light_dir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r2.xyz, -r2.xyzx
                add r3.xyz, r2.xyzx, v7.xyzx
                dp3 r1.w, r3.xyzx, r3.xyzx
                rsq r1.w, r1.w
                mul r3.xyz, r1.wwww, r3.xyzx  // H<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 306
                mul r4.xyzw, cb1[2].xyzw, cb3[0].xxxx  // final_a<0:Inf,1:Inf,2:Inf,3:Inf>
                dp3 r1.w, r1.xyzx, r2.xyzx
                max r1.w, r1.w, l(0.000000)
                min r1.w, r1.w, l(1.000000)
                mul r2.xyzw, r1.wwww, cb3[0].yyyy  // final_d<0,1,2,3>
                dp3 r1.x, r1.xyzx, r3.xyzx
                max r1.x, r1.x, l(0.000000)
                min r1.x, r1.x, l(1.000000)
                mul r1.x, r1.x, l(1.000000)
                mul r1.xyzw, r1.xxxx, cb3[0].zzzz  // final_s<0,1,2,3>
                add r1.xyzw, r1.xyzw, r2.xyzw
                mul r1.xyzw, r1.xyzw, cb1[2].xyzw
                add r1.xyzw, r1.xyzw, r4.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mul r0.xyzw, r0.xyzw, r1.xyzw
                max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                min o0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)  // PSMultiLBump<0:[0f,1f],1:[0f,1f],2:[0f,1f],3:[0f,1f]>
                ret 
                // Approximately 52 instruction slots used
                            
            };
            RasterizerState = mainState;
        }

    }

}

