//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject : register(b0)
{
    float4x4 worldViewProj;             // Offset:    0, size:   64
    float4x4 worldMx;                   // Offset:   64, size:   64
    float   sea_level;                  // Offset:  128, size:    4
    float   WaveTime;                   // Offset:  132, size:    4
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 RenderScene
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldMx;                  // Offset:   64 Size:    64
                //   float sea_level;                   // Offset:  128 Size:     4 [unused]
                //   float WaveTime;                    // Offset:  132 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // POSITION                 1   xyz         2     NONE  float       
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[7], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o3.xyzw
                dcl_temps 3
                
                #line 33 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Sea_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // vout<4:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // vout<5:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // vout<6:NaN:Inf>
                mov r0.xyzw, v1.xyzw  // vout<10,11,12,13>
                
                #line 43
                mov o0.xyzw, r1.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xyzw, r0.xyzw  // RenderSceneVS<10,11,12,13>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:   64 Size:    64 [unused]
                //   float sea_level;                   // Offset:  128 Size:     4
                //   float WaveTime;                    // Offset:  132 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // POSITION                 1   xyz         2     NONE  float       
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[9], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 47 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Sea_Effect.fx"
                lt r0.x, v1.y, cb0[8].x
                if_nz r0.x
                  mov r0.x, v1.y  // pin<5>
                  mul r0.y, v1.x, l(0.500000)
                  mul r0.y, r0.y, cb0[8].y  // xmod<0:Inf>
                  mul r0.z, v1.z, l(0.500000)
                  mul r0.z, r0.z, cb0[8].y  // zmod<0:Inf>
                  sincos r0.y, null, r0.y
                  mul r0.y, r0.y, l(0.100000)  // xmod<0:[-0.1f,0.1f]>
                  sincos r0.z, null, r0.z
                  mul r0.z, r0.z, l(0.100000)  // zmod<0:[-0.1f,0.1f]>
                  add r0.x, r0.y, r0.x  // pin<5>
                  add r0.x, r0.z, r0.x  // pin<5>
                
                #line 47
                else 
                
                #line 58
                  discard l(-1)
                  mov r0.x, v1.y  // pin<5>
                
                #line 47
                endif 
                
                #line 61
                lt r0.x, r0.x, l(-0.800000)
                if_nz r0.x
                  discard l(-1)
                endif 
                
                #line 66
                mov o0.xyzw, v3.xyzw  // RenderScenePS<0,1,2,3>
                ret 
                // Approximately 23 instruction slots used
                            
            };
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //   float4x4 worldMx;                  // Offset:   64 Size:    64
                //   float sea_level;                   // Offset:  128 Size:     4 [unused]
                //   float WaveTime;                    // Offset:  132 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // POSITION                 1   xyz         2     NONE  float       
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[7], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o3.xyzw
                dcl_temps 3
                
                #line 33 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Sea_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // vout<4:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // vout<5:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // vout<6:NaN:Inf>
                mov r0.xyzw, v1.xyzw  // vout<10,11,12,13>
                
                #line 43
                mov o0.xyzw, r1.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xyzw, r0.xyzw  // RenderSceneVS<10,11,12,13>
                mov o1.xyz, r2.xyzx  // RenderSceneVS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64 [unused]
                //   float4x4 worldMx;                  // Offset:   64 Size:    64 [unused]
                //   float sea_level;                   // Offset:  128 Size:     4
                //   float WaveTime;                    // Offset:  132 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // POSITION                 1   xyz         2     NONE  float       
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb0[9], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v3.xyzw
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 47 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Sea_Effect.fx"
                lt r0.x, v1.y, cb0[8].x
                if_nz r0.x
                  mov r0.x, v1.y  // pin<5>
                  mul r0.y, v1.x, l(0.500000)
                  mul r0.y, r0.y, cb0[8].y  // xmod<0:Inf>
                  mul r0.z, v1.z, l(0.500000)
                  mul r0.z, r0.z, cb0[8].y  // zmod<0:Inf>
                  sincos r0.y, null, r0.y
                  mul r0.y, r0.y, l(0.100000)  // xmod<0:[-0.1f,0.1f]>
                  sincos r0.z, null, r0.z
                  mul r0.z, r0.z, l(0.100000)  // zmod<0:[-0.1f,0.1f]>
                  add r0.x, r0.y, r0.x  // pin<5>
                  add r0.x, r0.z, r0.x  // pin<5>
                
                #line 47
                else 
                
                #line 58
                  discard l(-1)
                  mov r0.x, v1.y  // pin<5>
                
                #line 47
                endif 
                
                #line 61
                lt r0.x, r0.x, l(-0.800000)
                if_nz r0.x
                  discard l(-1)
                endif 
                
                #line 66
                mov o0.xyzw, v3.xyzw  // RenderScenePS<0,1,2,3>
                ret 
                // Approximately 23 instruction slots used
                            
            };
        }

    }

}

