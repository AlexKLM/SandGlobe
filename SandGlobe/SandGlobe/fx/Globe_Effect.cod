//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 worldViewProj;             // Offset:    0, size:   64
}

cbuffer pointLight : register(b1)
{
    float3  plight_pos;                 // Offset:    0, size:   12
    float   plight_range;               // Offset:   12, size:    4
    float3  plight_att;                 // Offset:   16, size:   12
    float4  plight_ambient;             // Offset:   32, size:   16
    float4  plight_diffuse;             // Offset:   48, size:   16
    float4  plight_specular;            // Offset:   64, size:   16
    float4  plight_spec_color;          // Offset:   80, size:   16
    float   spec_power;                 // Offset:   96, size:    4
    float3  plight_direction;           // Offset:  100, size:   12
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 RenderScene
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_temps 4
                
                #line 42 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Globe_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                mov r0.xyz, v0.xyzx  // vout<4,5,6>
                mov r2.xyz, v1.xyzx  // vout<7,8,9>
                mov r3.xyzw, v2.xyzw  // vout<10,11,12,13>
                mov o0.xyzw, r1.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xyzw, r3.xyzw  // RenderSceneVS<10,11,12,13>
                mov o1.xyz, r0.xyzx  // RenderSceneVS<4,5,6>
                mov o2.xyz, r2.xyzx  // RenderSceneVS<7,8,9>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float    y  
                // NORMAL                   0   xyz         2     NONE  float       
                // COLOR                    0   xyzw        3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_input_ps linear v1.y
                dcl_input_ps linear v3.xyz
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 51 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Globe_Effect.fx"
                lt r0.x, v1.y, l(-0.800000)
                if_nz r0.x
                  discard l(-1)
                endif 
                
                #line 55
                mov r0.xyz, v3.xyzx  // color<0,1,2>
                mov o0.xyz, r0.xyzx  // RenderScenePS<0,1,2>
                mov o0.w, l(0.050000)  // RenderScenePS<3: 0.05f>
                ret 
                // Approximately 8 instruction slots used
                            
            };
        }

        pass P1
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_temps 4
                
                #line 42 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Globe_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                mov r0.xyz, v0.xyzx  // vout<4,5,6>
                mov r2.xyz, v1.xyzx  // vout<7,8,9>
                mov r3.xyzw, v2.xyzw  // vout<10,11,12,13>
                mov o0.xyzw, r1.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xyzw, r3.xyzw  // RenderSceneVS<10,11,12,13>
                mov o1.xyz, r0.xyzx  // RenderSceneVS<4,5,6>
                mov o2.xyz, r2.xyzx  // RenderSceneVS<7,8,9>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float    y  
                // NORMAL                   0   xyz         2     NONE  float       
                // COLOR                    0   xyzw        3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_input_ps linear v1.y
                dcl_input_ps linear v3.xyz
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 62 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Globe_Effect.fx"
                lt r0.x, v1.y, l(-0.800000)
                if_nz r0.x
                  discard l(-1)
                endif 
                
                #line 66
                mov r0.xyz, v3.xyzx  // color<0,1,2>
                mov o0.xyz, r0.xyzx  // RenderTransperent<0,1,2>
                mov o0.w, l(0.050000)  // RenderTransperent<3: 0.05f>
                ret 
                // Approximately 8 instruction slots used
                            
            };
        }

        pass P2
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_temps 4
                
                #line 42 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Globe_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                mov r0.xyz, v0.xyzx  // vout<4,5,6>
                mov r2.xyz, v1.xyzx  // vout<7,8,9>
                mov r3.xyzw, v2.xyzw  // vout<10,11,12,13>
                mov o0.xyzw, r1.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xyzw, r3.xyzw  // RenderSceneVS<10,11,12,13>
                mov o1.xyz, r0.xyzx  // RenderSceneVS<4,5,6>
                mov o2.xyz, r2.xyzx  // RenderSceneVS<7,8,9>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // pointLight                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[3], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 74 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Globe_Effect.fx"
                lt r0.x, v1.y, l(-0.800000)
                if_nz r0.x
                  discard l(-1)
                endif 
                
                #line 78
                mov r0.xyz, cb1[2].xyzx  // LightColor<0,1,2>
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb1[0].xyzx  // Lightvector<0:Inf,1:Inf,2:Inf>
                mov r2.xyz, v2.xyzx  // pNormal<0,1,2>
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r1.w, r0.w
                mul r1.xyz, r1.wwww, r1.xyzx  // LDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, v3.xyzx
                sqrt r0.w, r0.w
                log r0.w, r0.w
                mul r0.w, r0.w, l(0.800000)
                exp r0.w, r0.w
                div r0.xyz, r0.xyzx, r0.wwww  // LightIntensity<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r2.xyzx, r1.xyzx
                mul r0.xyz, r0.wwww, r0.xyzx
                max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // FinalColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 86
                mov o0.xyz, r0.xyzx  // RenderPointL<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                mov o0.w, l(1.000000)  // RenderPointL<3: 1f>
                ret 
                // Approximately 24 instruction slots used
                            
            };
        }

        pass P3
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 worldViewProj;            // Offset:    0 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // COLOR                    0   xyzw        2     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyzw
                //
                vs_4_0
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xyzw
                dcl_temps 4
                
                #line 42 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Globe_Effect.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // vout<3:NaN:Inf>
                mov r0.xyz, v0.xyzx  // vout<4,5,6>
                mov r2.xyz, v1.xyzx  // vout<7,8,9>
                mov r3.xyzw, v2.xyzw  // vout<10,11,12,13>
                mov o0.xyzw, r1.xyzw  // RenderSceneVS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o3.xyzw, r3.xyzw  // RenderSceneVS<10,11,12,13>
                mov o1.xyz, r0.xyzx  // RenderSceneVS<4,5,6>
                mov o2.xyz, r2.xyzx  // RenderSceneVS<7,8,9>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer pointLight
                // {
                //
                //   float3 plight_pos;                 // Offset:    0 Size:    12 [unused]
                //   float plight_range;                // Offset:   12 Size:     4 [unused]
                //   float3 plight_att;                 // Offset:   16 Size:    12 [unused]
                //   float4 plight_ambient;             // Offset:   32 Size:    16
                //   float4 plight_diffuse;             // Offset:   48 Size:    16 [unused]
                //   float4 plight_specular;            // Offset:   64 Size:    16 [unused]
                //   float4 plight_spec_color;          // Offset:   80 Size:    16 [unused]
                //   float spec_power;                  // Offset:   96 Size:     4 [unused]
                //   float3 plight_direction;           // Offset:  100 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // pointLight                        cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float    y  
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // COLOR                    0   xyzw        3     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_4_0
                dcl_constantbuffer cb1[7], immediateIndexed
                dcl_input_ps linear v1.y
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xyz
                dcl_output o0.xyzw
                dcl_temps 3
                
                #line 90 "C:\Users\Not John\Desktop\year4\08961\08960_08961_ACW\SandGlobe\SandGlobe\Globe_Effect.fx"
                lt r0.x, v1.y, l(-0.800000)
                if_nz r0.x
                  discard l(-1)
                endif 
                
                #line 94
                mov r0.xyz, cb1[2].xyzx  // LightColor<0,1,2>
                mov r1.xyz, v2.xyzx  // pNormal<0,1,2>
                mov r2.xyz, -cb1[6].yzwy
                dp3 r0.w, r2.xyzx, r2.xyzx
                rsq r0.w, r0.w
                mul r2.xyz, r0.wwww, r2.xyzx  // LDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r0.xyz, r0.xyzx, v3.xyzx
                dp3 r0.w, cb1[6].yzwy, cb1[6].yzwy
                sqrt r0.w, r0.w
                log r0.w, r0.w
                mul r0.w, r0.w, l(0.800000)
                exp r0.w, r0.w
                div r0.xyz, r0.xyzx, r0.wwww  // LightIntensity<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r1.xyzx, r2.xyzx
                mul r0.xyz, r0.wwww, r0.xyzx
                max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)  // FinalColor<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                
                #line 101
                mov o0.xyz, r0.xyzx  // RenderDirL<0:[0f,1f],1:[0f,1f],2:[0f,1f]>
                mov o0.w, l(1.000000)  // RenderDirL<3: 1f>
                ret 
                // Approximately 24 instruction slots used
                            
            };
        }

    }

}

